<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IsPackable>true</IsPackable>

    <Version>1.2.1</Version>

    <PackageTags>advent-of-code, aoc</PackageTags>
    <Description>An aspiring AoC problem solving framework.</Description>
    <Copyright>Â© 2021-2022, Alex Kalfakakos</Copyright>
    <RepositoryUrl>https://github.com/AlFasGD/AdventOfCSharp</RepositoryUrl>
    <Authors>Alex Kalfakakos</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <Product>AdventOfCSharp</Product>
    <PackageReleaseNotes>1.2.1 changes:
Changes:
- Object answer string converters are prohibited
- Display execution times parameters moved to separate options in ProblemRunner (BREAKING)
- Method resolution for problem types migrated to a dedicated class

Analyzers:
- Answer string converter analyzer, including 3 new diagnostics

1.2.0 changes:
Additions:
- Automatic solution class generation upon failing to discover today's problem solution class (including publicly exposed API for custom dates)
- Live execution time printing (can be manually disabled, or automatically disabled for solutions with PrintsToConsoleAttribute)
- Run custom part solvers (with even more part number colors)
- IFinalDay
- PartSolutionStatus.Interactive

Changes:
- More documentation was added
- Part solver methods can be named and attributed with a kind (BREAKING)
- Separate download from input execution time
- Avoid printing input execution time if already loaded

Removals:
- BasicBenchmarking

Analyzers:
- Added AoCS0014 and AoCS0015 diagnostics

Internals:
- Upgraded Garyon and RoseLynn
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Garyon" Version="0.2.7" />
    <PackageReference Include="AdventOfCSharp.Analyzers" Version="1.1.0.1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources\GlyphResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>GlyphResources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\GlyphResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>GlyphResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
