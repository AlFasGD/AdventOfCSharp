using AdventOfCSharp.SourceGenerators.Extensions;
using AdventOfCSharp.SourceGenerators.Utilities;
using Microsoft.CodeAnalysis;
using System.Diagnostics;
using System.Linq;

namespace AdventOfCSharp.SourceGenerators;

[Generator]
public class BenchmarkSourceGenerator : ISourceGenerator
{
    public void Execute(GeneratorExecutionContext context)
    {
        var correlations = ProblemClassIdentifier.GetProblemClassCorrelationsSymbols(context.Compilation);

        foreach (var correlation in correlations)
        {
            var source = GenerateBenchmarkSource(correlation);
            var sourceName = GetBenchmarkSourceFileName(correlation.Year, correlation.Day);
            context.AddSource(sourceName, source);
        }

        AddDebugSource(context, "report.g.cs",
$@"// Correlations found: {correlations.Count()}"
);
    }

    public void Initialize(GeneratorInitializationContext context)
    {
        // No initialization required for this one
    }

    [Conditional("DEBUG")]
    private static void AddDebugSource(GeneratorExecutionContext context, string fileName, string source)
    {
        context.AddSource(fileName, source);
    }

    public static string GetBenchmarkSourceFileName(int year, int day)
    {
        return $"Benchmarks/Year{year}/Day{day}.g.cs";
    }

    private static string GenerateBenchmarkSource(ProblemClassDeclarationCorrelation correlation)
    {
        // Avoid conflicts at all costs; use the full name
        var fullDeclarationName = correlation.DeclarationSyntax.FullDeclaredSymbolName();

        return GenerateBenchmarkSource(correlation.Day, correlation.Year, fullDeclarationName);
    }
    public static string GenerateBenchmarkSourceFromBaseNamespace(int year, int day, string baseNamespace)
    {
        var fullDeclarationName = $"{baseNamespace}.Year{year}.Day{day}";
        return GenerateBenchmarkSource(year, day, fullDeclarationName);
    }
    public static string GenerateBenchmarkSource(int year, int day, string fullDeclarationName)
    {
        var namespaceString = $"AdventOfCSharp.Autogenerated.Benchmarks.Year{year}";

        // Do not enforce the godlike file-scoped namespace declarations of C# 10.0
        // This will specifically trigger Java developers, but
        // would they really bother about an auto-generated source file?
        return
$@"using AdventOfCSharp.Benchmarking;

namespace {namespaceString}
{{
    public sealed class Day{day} : BaseAutogeneratedProblemBenchmark<{fullDeclarationName}>
    {{
    }}
}}";
    }
}
